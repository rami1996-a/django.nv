cat >.github/workflows/main.yaml<<EOF
name: Django                                  # workflow name

on:
  push:
    branches:                                 # similar to "only" in GitLab
      - main

jobs:
  build:
    runs-on: ubuntu-22.04                    # similar to "image" in GitLab
    steps:
      - uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'

      - run: |
          pip3 install --upgrade virtualenv
          virtualenv env
          source env/bin/activate
          pip install -r requirements.txt
          python manage.py check

  test:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6'

      - run: |
          pip3 install --upgrade virtualenv
          virtualenv env
          source env/bin/activate
          pip install -r requirements.txt
          python manage.py test taskManager

  integration:
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - run: echo "This is an integration step"
      - run: exit 1
        continue-on-error: true
  
  zap_baseline:
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - run: |
           docker pull softwaresecurityproject/zap-stable:2.14.0
           docker run --user root --rm -v $(pwd):/zap/wrk:rw -w /zap softwaresecurityproject/zap-stable:2.14.0 zap-baseline.py -t https://prod-rxjmw5i8.lab.practical-devsecops.training -J zap-output.json
        continue-on-error: true

      - uses: actions/upload-artifact@v4
        with:
          name: ZAP Scan
          path: zap-output.json
        if: always()        # what is this for?
  prod:
    runs-on: ubuntu-22.04
    needs: integration
    steps:
      - run: echo "This is a deploy step."
EOF
